plugins {
    id("com.android.library")
}

android {
    compileSdkVersion 33
}

// We don't differentiate Debug or Release
configurations {
    aarBinary {
        canBeConsumed = true
        canBeResolved = false
    }
}


def goBuildDir = file("${buildDir}/go")
def outputAAR = file("${goBuildDir}/backend.aar")

task ensureBuildDir() {
    doLast {
        goBuildDir.mkdirs()
    }
}

task ensureGoMobile(type: Exec, dependsOn: ensureBuildDir) {
    environment 'GOBIN', goBuildDir.getPath()
    commandLine 'go', 'install', 'golang.org/x/mobile/cmd/gomobile@latest', 'golang.org/x/mobile/cmd/gobind@latest'
} doLast {
    exec {
        environment 'GOBIN', goBuildDir.getPath()
        commandLine "${goBuildDir}/gomobile", 'init'
    }
}

task gobind(type: Exec, dependsOn: ensureGoMobile) {
    workingDir goBuildDir
    environment 'ANDROID_HOME', android.sdkDirectory
    environment 'PATH', goBuildDir.getPath() + System.getProperty("path.separator") + System.getenv("PATH")
    commandLine "${goBuildDir}/gomobile", 'bind', '-target=android', '-o', outputAAR, "${rootDir}/backend/intra"
}


// AAR file that can be consumed by other projects
artifacts {
    aarBinary(outputAAR) {
        builtBy(gobind)
    }
}
